[{"path":"index.html","id":"introduction","chapter":"1 Introduction","heading":"1 Introduction","text":"name Vanja Manborg ever since got dabble data science (much data-science focused) engineering job, ’ve spent free time RStudio instead things like family, friends going movies. ’s still normal, right?believe learning--methodology attempt get relatively high scores Spaceship Titanic competition Kaggle learn new concepts tricks data-science ’m . competition futuristic version Titanic challenge goal predict high accuracy possible space-faring passengers got transported another dimension spaceships maiden voyage solar system another.Note won’t go details packages functions expect check . Also, imagine reader following along write “x”, mean voices head (although , ).Without ado, let’s dive !","code":""},{"path":"early-data-exploration.html","id":"early-data-exploration","chapter":"2 Early data exploration","heading":"2 Early data exploration","text":"","code":""},{"path":"early-data-exploration.html","id":"overview-of-the-data","chapter":"2 Early data exploration","heading":"2.1 Overview of the data","text":"data already divided train test sets let’s load get sense train data looks like. ’ll also try strict machine learning principles touch even look test data end.Let’s first get sense train data.8693 observations 14 variables “Transported” target variable. specifics different variables explained detail competition website won’t repeat . ’s enough note mix categorical continuous variables target variable expressed True/False character vector.","code":"\ntrain <- read.csv(\"train.csv\", na.strings = \"\")\nstr(train)\n#> 'data.frame':    8693 obs. of  14 variables:\n#>  $ PassengerId : chr  \"0001_01\" \"0002_01\" \"0003_01\" \"0003_02\" ...\n#>  $ HomePlanet  : chr  \"Europa\" \"Earth\" \"Europa\" \"Europa\" ...\n#>  $ CryoSleep   : chr  \"False\" \"False\" \"False\" \"False\" ...\n#>  $ Cabin       : chr  \"B/0/P\" \"F/0/S\" \"A/0/S\" \"A/0/S\" ...\n#>  $ Destination : chr  \"TRAPPIST-1e\" \"TRAPPIST-1e\" \"TRAPPIST-1e\" \"TRAPPIST-1e\" ...\n#>  $ Age         : num  39 24 58 33 16 44 26 28 35 14 ...\n#>  $ VIP         : chr  \"False\" \"False\" \"True\" \"False\" ...\n#>  $ RoomService : num  0 109 43 0 303 0 42 0 0 0 ...\n#>  $ FoodCourt   : num  0 9 3576 1283 70 ...\n#>  $ ShoppingMall: num  0 25 0 371 151 0 3 0 17 0 ...\n#>  $ Spa         : num  0 549 6715 3329 565 ...\n#>  $ VRDeck      : num  0 44 49 193 2 0 0 NA 0 0 ...\n#>  $ Name        : chr  \"Maham Ofracculy\" \"Juanna Vines\" \"Altark Susent\" \"Solam Susent\" ...\n#>  $ Transported : chr  \"False\" \"True\" \"False\" \"False\" ..."},{"path":"early-data-exploration.html","id":"do-some-variables-have-zero-or-near-zero-variance","chapter":"2 Early data exploration","heading":"2.2 Do some variables have zero or near-zero variance?","text":"One first things might useful check whether variables zero near-zero variance. zero variance variable one rows value (imagine variable rows just number 1). variables useful prediction since don’t change regardless target variable changes.close cousin near-zero variances high percentage rows value don’t. can particularly problematic want repeated cross validation divide data subdata test models. subdata might zero variance subdata might get high variance variable.VIP variable near-zero variation (2.3% rows). ’ll deal later.","code":"\nnearZeroVar(train, saveMetrics = TRUE) %>% rownames_to_column() %>% filter(nzv)\n#>   rowname freqRatio percentUnique zeroVar  nzv\n#> 1     VIP  41.66332    0.02300702   FALSE TRUE"},{"path":"early-data-exploration.html","id":"frequency-distribution-of-all-variables","chapter":"2 Early data exploration","heading":"2.3 Frequency distribution of all variables","text":"Let’s see values different variables distributed.\nFigure 2.1: Distribution variables response\ntarget variable balanced preferable. unbalanced distribution target variable (meaning share one outcome vastly outweighs ) can skew predictive results algorithms. Fortunately, apply resampling downsampling methods balance .numeric variables right-skewed, meaning outliers right horizontal axis amenities (RoomService, FoodCourt etc) high proportion zero values. difference scales also large. need apply kind preproces scale help models like K-nearest-neighbors (KNN). might also need add binary features (yes/1/0) amenities zero.Cabin Name variables near uniform distribution implies either won’t much predictive power even reduce accuracy introducing unnecessary noise model. either derive features variables include models.","code":"\nplot_frq(train, Transported)\nplot_frq(train, -Transported, type = \"histogram\")"},{"path":"early-data-exploration.html","id":"correlation-between-the-variables","chapter":"2 Early data exploration","heading":"2.4 Correlation between the variables","text":"\nFigure 2.2: Correlation numerical variables\nsee ’s relatively high correlation homeplanets destinations well moderate correlation CryoSleep Transported already gives us hint CryoSleep might important. Otherwise, cariables seem relatively uncorrelated good thing since models handle variables correlated.","code":"\ntrain %>%\n  na.omit(.) %>%\nplot_correlation(., type = \"all\", theme_config = list(axis.text.x = element_text(angle = 90)))\n#> 3 features with more than 20 categories ignored!\n#> PassengerId: 6606 categories\n#> Cabin: 5305 categories\n#> Name: 6590 categories"},{"path":"early-data-exploration.html","id":"overview-of-missing-values","chapter":"2 Early data exploration","heading":"2.5 Overview of missing values","text":"\nFigure 2.3: Missing values overview\npredictor variables missing amount 2% relatively low. cluster missing values, can also see don’t overlap suggests ’re missing random due specific pattern. tells us can probably find suitable algorithm help us impute missing values based non-missing values. pattern clusters missing data, ’d explore uncover reasons non-random missingness.","code":"\nplot_na_hclust(train)"},{"path":"handle-missing-data.html","id":"handle-missing-data","chapter":"3 Handle missing data","heading":"3 Handle missing data","text":"get advanced exploration data, let’s first visualize data different ways get better sense .","code":""},{"path":"handle-missing-data.html","id":"simple-but-useful-features","chapter":"3 Handle missing data","heading":"3.1 Simple but useful features","text":"’re given several useful bits information data competition website can apply create useful features. features, mean new variables derived existing ones. example, Cabin comprised information cabin number, deck side PassengerId contains passenger group id.’ve created function derives new variables existing ones. ’ve also created features count number unique categories different variables related passenger group can filter visualizations answer questions like ‘passenger group travelling different home planets?’","code":"\nuseful_features <- function(x) {\n  x2 <- x %>%\n    mutate(PassengerGroup = str_split_i(PassengerId, \"_\", 1),\n           LastName = word(Name, -1),\n           Deck = str_split_i(Cabin, \"/\", 1),\n           CabinNumber = str_split_i(Cabin, \"/\", 2),\n           Side = str_split_i(Cabin, \"/\", 3),\n           TotalSpent = RoomService + FoodCourt + ShoppingMall + Spa + VRDeck,\n           PassengerCount = 1) %>% # I added this to use as a count variable in visualizations\n    group_by(PassengerGroup) %>%\n    add_count(PassengerGroup, name = \"PassengerGroupSize\") %>%\n    mutate(HomePlanetsPerGroup = n_distinct(HomePlanet, na.rm = TRUE),\n           DestinationsPerGroup = n_distinct(Destination, na.rm = TRUE),\n           CabinsPerGroup = n_distinct(Cabin, na.rm = TRUE),\n           TotalSpentPerGroup = sum(TotalSpent, na.rm = TRUE),\n           CryoSleepsPerGroup = n_distinct(CryoSleep, na.rm = TRUE),\n           VIPsPerGroup = n_distinct(VIP, na.rm = TRUE),\n           LastNamesPerGroup = n_distinct(LastName, na.rm = TRUE)) %>%\n    ungroup() %>%\n    mutate(across(.cols = c(HomePlanet, CryoSleep, Destination, VIP, Transported, Deck, Side, HomePlanetsPerGroup,\n                            PassengerGroupSize, DestinationsPerGroup, CabinsPerGroup, CryoSleepsPerGroup, VIPsPerGroup,\n                            LastNamesPerGroup, PassengerGroup, PassengerId),\n                  .fns = as.factor)) %>%\n    mutate(across(.cols = c(CabinNumber, Age, RoomService, FoodCourt, ShoppingMall, Spa, VRDeck),\n                  .fns = as.integer))\n  return(x2)\n}\n\ntrain2 <- useful_features(train)"},{"path":"handle-missing-data.html","id":"closer-look-at-missing-values","chapter":"3 Handle missing data","heading":"3.2 Closer look at missing values","text":"closer look variable missing values gives us insights. example, every passenger group always starts home planet. can use information replace missing HomePlanet values passengers belonging group known home planet. leave us passengers travelling alone.\n(#fig:missing_homeplanet)Missing values HomePlanet\ncan also see groups two travelers never housed cabins (non-solo) groups. words, group two passengers can spread across several cabins never share cabins groups two passengers. show example starboard deck G relationship applies entire spaceship. can use information replace missing cabin values.\n(#fig:missing_cabin)Missing values Cabin\nlook Deck can see decks seem dedicated passengers specific home planet. can use information replace even missing HomePlanet.\n(#fig:missing_deck)Missing values Deck\ncan also see aren’t VIPs travelling Earth.\n(#fig:missing_vip)Missing values VIP\ndescription data told passengers cryosleep confined cabins. must assume means spend credits amenities therefore can replace missing amenities zeroes passengers. reverse also true: passenger spent credits, passenger cryosleep.look Age values plot amenities, can see passengers 12 years age don’t spend credits can therefore use replace even missing values amenities.\n(#fig:missing_age)Missing values ameneties\n","code":"\ntrain2 %>%\n  group_by(PassengerGroup) %>%\n  filter(any(is.na(HomePlanet))) %>%\n  ungroup() %>%\n  slice_sample(n = 100) %>%\n  ggplot(., mapping = aes(x = PassengerGroup, y = PassengerCount, fill = HomePlanet)) +\n    geom_col()  +\n    labs(title = \"Example missing HomePlanet\", x = \"Passenger group\", y = \"Number of passengers\") +\n    scale_y_continuous(breaks = seq(0, 9000, 50)) +\n    theme(axis.text.x = element_text(angle = 90, hjust = 1))\ntrain2 %>%\n  filter(PassengerGroupSize != 1 & Side == \"S\" & Deck == \"G\") %>%\n  slice_sample(n = 100) %>%\n  ggplot(., mapping = aes(x = as.factor(CabinNumber), y = PassengerCount, fill = PassengerGroup)) +\n  geom_col() +\n  labs(title = \"Example missing CabinNumber\", x = \"Cabin number\", y = \"Number of passengers\") +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = \"none\")\ntrain2 %>%\n  group_by(Deck) %>%\n  filter(any(is.na(HomePlanet))) %>%\n  ungroup() %>%\n  ggplot(., mapping = aes(x = Deck, y = PassengerCount, fill = HomePlanet)) +\n  geom_col() +\n  labs(title = \"Missing HomePlanet by Deck\", x = \"Deck\", y = \"Number of passengers\") +\n  scale_y_continuous(breaks = seq(0, 9000, 200)) +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1))\ntrain2 %>%\n  ggplot(., mapping = aes(x = HomePlanet, y = PassengerCount, fill = VIP)) +\n  geom_col() +\n  labs(title = \"Missing VIP by HomePlanet\", x = \"HomePlanet\", y = \"Number of passengers\") +\n  scale_y_continuous(breaks = seq(0, 9000, 200)) +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1))\ntrain2 %>%\n  ggplot(., mapping = aes(x = Age, y = TotalSpent)) +\n  geom_col() +\n  labs(title = \"Missing Age\", x = \"Age of passengers\", y = \"TotalSpent\") +\n  scale_y_continuous(breaks = seq(0, 500000, 50000)) +\n  scale_x_continuous(breaks = seq(0, 100, 2)) +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1))"},{"path":"handle-missing-data.html","id":"replace-data-with-manual-rules","chapter":"3 Handle missing data","heading":"3.3 Replace data with manual rules","text":"’ve summed replacement rules function .’ve halved amount missing values manual replacements. rest can handle imputation.","code":"\nmy_na_replace <- function(d) {\n  d2 <- d %>%\n    # Replace HomePlanet for passengers in groups where the homeplanet is known from the other passengers\n    group_by(PassengerGroup) %>% \n    fill(HomePlanet, .direction = \"downup\") %>% \n    \n    # Replace Cabin by group cabin for groups with group count > 1. Update the Deck, CabinNumber and Side variables.\n    mutate(Cabin2 = Cabin) %>%\n    fill(data = ., Cabin2, .direction = \"downup\") %>%\n    ungroup() %>%\n    mutate(Cabin = if_else(is.na(Cabin) & PassengerGroupSize != 1, Cabin2, Cabin)) %>%\n    select(-Cabin2) %>%\n    \n    # Replace HomePlanet if the passenger is housed on a dedicated Deck\n    mutate(HomePlanet = if_else(is.na(HomePlanet) & Deck == \"G\", \"Earth\", HomePlanet),\n           HomePlanet = if_else(is.na(HomePlanet) & Deck %in% c(\"A\", \"B\", \"C\"), \"Europa\", HomePlanet)) %>%\n    \n    # Replace all of VIPs from Earth to FALSE\n    mutate(VIP = if_else(is.na(VIP) & HomePlanet == \"Earth\", \"False\", VIP)) %>%\n    \n    # Replace amenities with zero if CryoSleep is TRUE or if Age <= 12\n    # Replace CryoSleep with FALSE if the passenger has spent credits\n    mutate(across(.cols = c(RoomService, FoodCourt, ShoppingMall, Spa, VRDeck), \n                  .fns = ~ if_else(condition = CryoSleep == \"True\" | Age <= 12, true = 0, false = .x, missing = .x)),\n           CryoSleep = if_else(TotalSpent > 0 & is.na(CryoSleep), \"False\", CryoSleep))\n  return(d2)\n}\n\ntrain3 <- my_na_replace(train2)\ntrain3 <- useful_features(train3)\n\nplot_na_hclust(train3)"},{"path":"handle-missing-data.html","id":"replace-data-with-imputation","chapter":"3 Handle missing data","heading":"3.4 Replace data with imputation","text":"algorithms require missing data since find patterns missing data, can use imputational algorithms replacement. ’ve used two: MissRanger missRanger-package KNN tidymodels-package. Since especially KNN sensitive scale data, ’ve normalized numeric data avoid possible issues outliers affecting imputation.(’ve also tried imputate_na function dlookr-package slow.)","code":""},{"path":"handle-missing-data.html","id":"missranger---chained-random-forests","chapter":"3 Handle missing data","heading":"3.4.1 MissRanger - Chained Random Forests","text":"missRanger algorithm can impute variables time option select id variable included data used imputation. , excluded Name variables improve computation time.","code":"\nrev_normalization <- function(v, rec) { # Custom function that will \"unnormalise\" numeric values inside mutate(across())\n  tidy_rec <- tidy(rec, number = 1)\n  v2 <- v * filter(tidy_rec, terms == cur_column() & statistic == \"sd\")$value + \n    filter(tidy_rec, terms == cur_column() & statistic == \"mean\")$value\n  v3 <- round(v2, 0)\n  return(v3)\n}\n\n# ranger_norm <- recipe(Transported ~ ., data = train3) %>%\n#   step_normalize(all_numeric_predictors()) %>%\n#   prep()\n# \n# train3_ranger <- ranger_norm %>%\n#   bake(new_data = NULL) %>%\n#   select(-c(Cabin, Name, LastName, PassengerCount))\n# \n# ranger <- missRanger(train3_ranger, formula = . ~ . -PassengerId, seed = 8584, verbose = 0)\n# \n# ranger_unnorm <- ranger %>%\n#   mutate(across(.cols = c(Age, CabinNumber, RoomService, FoodCourt, ShoppingMall, Spa, VRDeck),\n#                 .fns = ~ rev_normalization(.x, ranger_norm)))\n# \n# ranger2 <- train3 %>%\n#   select(PassengerId, Cabin, Name, LastName, PassengerCount) %>%\n#   left_join(ranger_unnorm, ., by = \"PassengerId\")\n# \n# save(ranger2, file = \"MissRanger.RData\")\nload(\"MissRanger.RData\")"},{"path":"handle-missing-data.html","id":"knn---k-nearest-neighbors","chapter":"3 Handle missing data","heading":"3.4.2 KNN - K-Nearest Neighbors","text":"KNN-algorithm fast can impute multiple variables time. can also relatively easily tuned changing number neighbors imputation based .","code":"\n# knn_norm <- recipe(Transported ~ ., data = train3) %>%\n#   step_normalize(Age, CabinNumber, RoomService, FoodCourt, ShoppingMall, Spa, VRDeck) %>%\n#   prep()\n# \n# train3_knn <- knn_norm %>%\n#   bake(new_data = NULL)\n# \n# train3_knn_noNA <- train3_knn %>%\n#   na.omit()\n# \n# vars_to_impute <- c(\"HomePlanet\", \"CryoSleep\", \"Destination\", \"Age\", \"VIP\", \"RoomService\", \"FoodCourt\", \"ShoppingMall\",\n#                     \"Spa\", \"VRDeck\", \"Deck\", \"Side\", \"CabinNumber\", \"LastName\")\n# vars_for_imputing <- c(\"HomePlanet\", \"CryoSleep\", \"Destination\", \"Age\", \"VIP\", \"RoomService\", \"FoodCourt\",\n#                               \"ShoppingMall\", \"Spa\", \"VRDeck\", \"PassengerGroup\", \"Deck\", \"Side\", \"CabinNumber\",\n#                               \"PassengerGroupSize\", \"HomePlanetsPerGroup\", \"DestinationsPerGroup\", \"CabinsPerGroup\",\n#                               \"CryoSleepsPerGroup\", \"VIPsPerGroup\", \"LastNamesPerGroup\")\n# \n# imp_knn_rec <- recipe(Transported ~ ., data = train3_knn_noNA) %>%\n#   step_impute_knn(recipe = ., all_of(vars_to_impute), impute_with = imp_vars(all_of(vars_for_imputing)),\n#                   neighbors = 5) %>%\n#   prep()\n# \n# knn <- bake(imp_knn_rec, new_data = train3_knn)\n# \n# knn_unnorm <- knn %>%\n#   mutate(across(.cols = c(Age, CabinNumber, RoomService, FoodCourt, ShoppingMall, Spa, VRDeck),\n#                 .fns = ~ rev_normalization(.x, knn_norm)))\n# \n# save(knn_unnorm, file = \"KNN.RData\")\nload(\"KNN.RData\")"},{"path":"handle-missing-data.html","id":"comparison-of-imputation-algorithms---numerical-variables","chapter":"3 Handle missing data","heading":"3.4.3 Comparison of imputation algorithms - numerical variables","text":"\n(#fig:imputation_evaluation_num)Comparisson standard deviation numerical values imputation\n\n(#fig:imputation_evaluation_num2)Comparisson mean numerical values imputation\nbarely difference algorithms use KNN-algorithm already recipe step recipe-package ’ll use modelling.","code":"\nmy_skim <- skim_with(numeric = sfl(min = ~min(., na.rm = TRUE), median = ~median(., na.rm = TRUE), \n                                   mean = ~mean(., na.rm = TRUE), max = ~max(., na.rm = TRUE), \n                                   sd = ~sd(., na.rm = TRUE)), append = FALSE)\n\nno_imp_skim <- train3 %>%\n  select(Age, RoomService, FoodCourt, ShoppingMall, Spa, VRDeck, CabinNumber) %>%\n  my_skim(.)\n\nranger_skim <- ranger2 %>%\n  select(Age, RoomService, FoodCourt, ShoppingMall, Spa, VRDeck, CabinNumber) %>%\n  my_skim(.)\n\nknn_skim <- knn_unnorm %>%\n  select(Age, RoomService, FoodCourt, ShoppingMall, Spa, VRDeck, CabinNumber) %>%\n  my_skim(.)\n\nsd_skim <- bind_cols(\"Variable\" = no_imp_skim$skim_variable, \"No imp\" = no_imp_skim$numeric.sd, \n                     \"MissRanger\" = ranger_skim$numeric.sd,  \"KNN\" = knn_skim$numeric.sd) %>%\n  pivot_longer(., cols = !Variable, names_to = \"Metric\", values_to = \"Standard_deviation\")\n\nmean_skim <- bind_cols(\"Variable\" = no_imp_skim$skim_variable, \"No imp\" = no_imp_skim$numeric.mean, \n                     \"missRanger\" = ranger_skim$numeric.mean, \"KNN\" = knn_skim$numeric.mean) %>%\n  pivot_longer(., cols = !Variable, names_to = \"Metric\", values_to = \"Mean\")\n\nsd_skim %>%\n  filter(Metric != \"No imp\") %>%\n  ggplot(., mapping = aes(x = Metric, y = Standard_deviation)) +\n  geom_point() +\n  geom_hline(data = sd_skim %>% filter(Metric == \"No imp\"), aes(yintercept = Standard_deviation, colour = \"orange\")) +\n  lims(y = c(0, NA)) +\n  facet_wrap(~Variable, scales = \"free\") +\n  scale_colour_discrete(name = \"Non-imputed\", labels = \"sd\", type = \"orange\")\nmean_skim %>%\n  filter(Metric != \"No imp\") %>%\n  ggplot(., mapping = aes(x = Metric, y = Mean)) +\n  facet_wrap(~Variable, scales = \"free\") +\n  geom_point() +\n  geom_hline(data = mean_skim %>% filter(Metric == \"No imp\"), aes(yintercept = Mean, colour = \"green\")) +\n  lims(y = c(0, NA)) +\n  scale_colour_discrete(name = \"Non-imputed\", labels = \"mean\", type = \"green\")"},{"path":"handle-missing-data.html","id":"comparison-of-imputation-algorithms---categorical-variables","chapter":"3 Handle missing data","heading":"3.4.4 Comparison of imputation algorithms - categorical variables","text":"\n(#fig:imputation_evaluation_cat-1)Imputed distribution categorical variables three methods imputation\n\n(#fig:imputation_evaluation_cat-2)Imputed distribution categorical variables three methods imputation\nPerhaps expected since amount missing data low ’s good confirm visually imputations haven’t done anything crazy.","code":""},{"path":"handle-missing-data.html","id":"do-the-imputated-values-break-any-rules","chapter":"3 Handle missing data","heading":"3.4.5 Do the imputated values break any “rules”?","text":"One last thing must accept imputed values check whether imputation managed adhere ‘rules’ discovered manual exploration. use modified version useful_features-function update simple features.can note several issues:\n1. Passengers group 7336 missing values HomePlanet imputation given different home planets, something breaks ‘rule’ discovered earlier passenger groups travel home planet\n2. Passenger 0770-02 missing value Age algorithm set 4 even though passenger spent credits thus older 12.can deal first issue make rule sets homeplanet entire group based one member’s homeplanets group one homeplanet. second issue trickier can replace mean age passengers deck cryosleep status.\n(#fig:manual_imp_correction)Missing values overview imputation\nmissing values now variables won’t use modelling (’ll use features derived instead).","code":"\nuseful_features2 <- function(x) {\n  x2 <- x %>%\n    mutate(TotalSpent = RoomService + FoodCourt + ShoppingMall + Spa + VRDeck) %>%\n    group_by(PassengerGroup) %>%\n    add_count(PassengerGroup, name = \"PassengerGroupSize\") %>%\n    mutate(HomePlanetsPerGroup = n_distinct(HomePlanet, na.rm = TRUE),\n           DestinationsPerGroup = n_distinct(Destination, na.rm = TRUE),\n           CabinsPerGroup = n_distinct(Cabin, na.rm = TRUE),\n           TotalSpentPerGroup = sum(TotalSpent, na.rm = TRUE),\n           CryoSleepsPerGroup = n_distinct(CryoSleep, na.rm = TRUE),\n           VIPsPerGroup = n_distinct(VIP, na.rm = TRUE),\n           LastNamesPerGroup = n_distinct(LastName, na.rm = TRUE)) %>%\n    ungroup() %>%\n    mutate(across(.cols = c(HomePlanet, CryoSleep, Destination, VIP, Transported, Deck, Side, HomePlanetsPerGroup,\n                            PassengerGroupSize, DestinationsPerGroup, CabinsPerGroup, CryoSleepsPerGroup, VIPsPerGroup,\n                            LastNamesPerGroup, PassengerGroup, PassengerId),\n                  .fns = as.factor)) %>%\n    mutate(across(.cols = c(CabinNumber, Age, RoomService, FoodCourt, ShoppingMall, Spa, VRDeck),\n                  .fns = as.integer))\n  return(x2)\n}\n\ncheck_knn <- useful_features2(knn_unnorm)\n\ncheck_knn %>%\n  filter(HomePlanetsPerGroup != 1) %>%\n  select(PassengerId, HomePlanet, HomePlanetsPerGroup)\n#> # A tibble: 2 × 3\n#>   PassengerId HomePlanet HomePlanetsPerGroup\n#>   <fct>       <fct>      <fct>              \n#> 1 7336_01     Earth      2                  \n#> 2 7336_02     Mars       2\n\ncheck_knn %>%\n  filter(Deck %in% c(\"A\", \"B\", \"C\") & HomePlanet != \"Europa\" | Deck == \"G\" & HomePlanet != \"Earth\") %>%\n  select(PassengerId, HomePlanet, Deck)\n#> # A tibble: 0 × 3\n#> # ℹ 3 variables: PassengerId <fct>, HomePlanet <fct>,\n#> #   Deck <fct>\n\ncheck_knn %>%\n  filter(CryoSleep == TRUE & TotalSpent > 0) %>%\n  select(PassengerId, CryoSleep, RoomService, FoodCourt, ShoppingMall, Spa, VRDeck, TotalSpent)\n#> # A tibble: 0 × 8\n#> # ℹ 8 variables: PassengerId <fct>, CryoSleep <fct>,\n#> #   RoomService <int>, FoodCourt <int>, ShoppingMall <int>,\n#> #   Spa <int>, VRDeck <int>, TotalSpent <dbl>\n\ncheck_knn %>%\n  filter(Age <= 12 & TotalSpent > 0) %>%\n  select(PassengerId, CryoSleep, Age, RoomService, FoodCourt, ShoppingMall, Spa, VRDeck, TotalSpent)\n#> # A tibble: 1 × 9\n#>   PassengerId CryoSleep   Age RoomService FoodCourt\n#>   <fct>       <fct>     <int>       <int>     <int>\n#> 1 0770_02     False         4           0       715\n#> # ℹ 4 more variables: ShoppingMall <int>, Spa <int>,\n#> #   VRDeck <int>, TotalSpent <dbl>\n\ncheck_knn %>%\n  filter(VIP == TRUE & HomePlanet == \"Earth\") %>%\n  select(PassengerId, HomePlanet, VIP)\n#> # A tibble: 0 × 3\n#> # ℹ 3 variables: PassengerId <fct>, HomePlanet <fct>,\n#> #   VIP <fct>\namenities_summary <- check_knn %>%\n  filter(Age > 12 & TotalSpent > 0) %>%\n  summarise(mean_age = round(mean(Age), 0), .by = c(CryoSleep, Deck))\n\nwrong_age <- check_knn %>%\n  filter(Age <= 12 & TotalSpent > 0) %>%\n  left_join(., amenities_summary, by = c(\"CryoSleep\", \"Deck\")) %>%\n  select(PassengerId, mean_age)\n\nwrong_planet <- check_knn %>%\n  filter(HomePlanetsPerGroup != 1) %>%\n  select(PassengerId, PassengerGroup, HomePlanet) %>%\n  group_by(PassengerGroup) %>%\n  mutate(HomePlanet_correct = first(HomePlanet)) %>%\n  ungroup() %>%\n  select(PassengerId, HomePlanet_correct)\n\nfix_knn <- check_knn %>%\n  left_join(., wrong_age, by = \"PassengerId\") %>%\n  left_join(., wrong_planet, by = \"PassengerId\") %>%\n  mutate(Age = if_else(Age <= 12 & TotalSpent > 0, mean_age, Age),\n         HomePlanet = if_else(HomePlanetsPerGroup != 1, HomePlanet_correct, HomePlanet)) %>%\n  select(-mean_age, -HomePlanet_correct)\n\ntrain4 <- useful_features2(fix_knn)\n\nplot_na_hclust(train4)"},{"path":"parts.html","id":"parts","chapter":"4 Parts","heading":"4 Parts","text":"can add parts organize one book chapters together. Parts can inserted top .Rmd file, first-level chapter heading file.Add numbered part: # (PART) Act one {-} (followed # chapter)Add unnumbered part: # (PART\\*) Act one {-} (followed # chapter)Add appendix special kind un-numbered part: # (APPENDIX) stuff {-} (followed # chapter). Chapters appendix prepended letters instead numbers.","code":""},{"path":"footnotes-and-citations.html","id":"footnotes-and-citations","chapter":"5 Footnotes and citations","heading":"5 Footnotes and citations","text":"","code":""},{"path":"footnotes-and-citations.html","id":"footnotes","chapter":"5 Footnotes and citations","heading":"5.1 Footnotes","text":"Footnotes put inside square brackets caret ^[]. Like one 1.","code":""},{"path":"footnotes-and-citations.html","id":"citations","chapter":"5 Footnotes and citations","heading":"5.2 Citations","text":"Reference items bibliography file(s) using @key.example, using bookdown package2 (check last code chunk index.Rmd see citation key added) sample book, built top R Markdown knitr3 (citation added manually external file book.bib).\nNote .bib files need listed index.Rmd YAML bibliography key.bs4_book theme makes footnotes appear inline click . example book, added csl: chicago-fullnote-bibliography.csl index.Rmd YAML, include .csl file. download new style, recommend: https://www.zotero.org/styles/RStudio Visual Markdown Editor can also make easier insert citations: https://rstudio.github.io/visual-markdown-editing/#/citations","code":""},{"path":"blocks.html","id":"blocks","chapter":"6 Blocks","heading":"6 Blocks","text":"","code":""},{"path":"blocks.html","id":"equations","chapter":"6 Blocks","heading":"6.1 Equations","text":"equation.\\[\\begin{equation}\n  f\\left(k\\right) = \\binom{n}{k} p^k\\left(1-p\\right)^{n-k}\n  \\tag{6.1}\n\\end{equation}\\]may refer using \\@ref(eq:binom), like see Equation (6.1).","code":""},{"path":"blocks.html","id":"theorems-and-proofs","chapter":"6 Blocks","heading":"6.2 Theorems and proofs","text":"Labeled theorems can referenced text using \\@ref(thm:tri), example, check smart theorem 6.1.Theorem 6.1  right triangle, \\(c\\) denotes length hypotenuse\n\\(\\) \\(b\\) denote lengths two sides, \n\\[^2 + b^2 = c^2\\]Read https://bookdown.org/yihui/bookdown/markdown-extensions--bookdown.html.","code":""},{"path":"blocks.html","id":"callout-blocks","chapter":"6 Blocks","heading":"6.3 Callout blocks","text":"bs4_book theme also includes special callout blocks, like .rmdnote.can use markdown inside block.user define appearance blocks LaTeX output.may also use: .rmdcaution, .rmdimportant, .rmdtip, .rmdwarning block name.R Markdown Cookbook provides help use custom blocks design callouts: https://bookdown.org/yihui/rmarkdown-cookbook/custom-blocks.html","code":"\nhead(beaver1, n = 5)\n#>   day time  temp activ\n#> 1 346  840 36.33     0\n#> 2 346  850 36.34     0\n#> 3 346  900 36.35     0\n#> 4 346  910 36.42     0\n#> 5 346  920 36.55     0"},{"path":"sharing-your-book.html","id":"sharing-your-book","chapter":"7 Sharing your book","heading":"7 Sharing your book","text":"","code":""},{"path":"sharing-your-book.html","id":"publishing","chapter":"7 Sharing your book","heading":"7.1 Publishing","text":"HTML books can published online, see: https://bookdown.org/yihui/bookdown/publishing.html","code":""},{"path":"sharing-your-book.html","id":"pages","chapter":"7 Sharing your book","heading":"7.2 404 pages","text":"default, users directed 404 page try access webpage found. ’d like customize 404 page instead using default, may add either _404.Rmd _404.md file project root use code /Markdown syntax.","code":""},{"path":"sharing-your-book.html","id":"metadata-for-sharing","chapter":"7 Sharing your book","heading":"7.3 Metadata for sharing","text":"Bookdown HTML books provide HTML metadata social sharing platforms like Twitter, Facebook, LinkedIn, using information provide index.Rmd YAML. setup, set url book path cover-image file. book’s title description also used.bs4_book provides enhanced metadata social sharing, chapter shared unique description, auto-generated based content.Specify book’s source repository GitHub repo _output.yml file, allows users view chapter’s source file suggest edit. Read features output format :https://pkgs.rstudio.com/bookdown/reference/bs4_book.htmlOr use:","code":"\n?bookdown::bs4_book"},{"path":"references.html","id":"references","chapter":"References","heading":"References","text":"","code":""}]
